/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.ServiceRecords;
import model.ServiceRecordsHistory;

/**
 *
 * @author Nikhil
 */
public class CreateServiceRecordsPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateServiceRecords
     */
    
    ServiceRecordsHistory history;
    public CreateServiceRecordsPanel(ServiceRecordsHistory history) {
        initComponents();
        this.history= history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblServiceId = new javax.swing.JLabel();
        txtServiceId = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lblMileage = new javax.swing.JLabel();
        txtMileage = new javax.swing.JTextField();

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create Service Records");

        lblServiceId.setText("Service id*:");

        txtServiceId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServiceIdActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblDate.setText("Date*:");

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        lblMileage.setText("Mileage:");

        txtMileage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMileageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDate)
                            .addComponent(lblServiceId)
                            .addComponent(lblMileage))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServiceId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 188, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblServiceId)
                    .addComponent(txtServiceId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDate)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMileage)
                    .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addComponent(btnSave)
                .addContainerGap(94, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtServiceIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServiceIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServiceIdActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        //validate mandatory fields
        if(validateServiceRecords()){
        
        //Logic save service record
        String serviceId= txtServiceId.getText();
        String date= txtDate.getText();
        String mileage= txtMileage.getText();
        ServiceRecords sr= history.addNewServiceRecord();
        sr.setId(serviceId);
        sr.setId(serviceId);
        sr.setDate(date);
        sr.setMileage(mileage);
        
        JOptionPane.showMessageDialog(this, "Service record added, You may add more or close the window");
        
        //reset values
        txtServiceId.setText("");
        txtDate.setText("");
        txtMileage.setText("");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtMileageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMileageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMileageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblMileage;
    private javax.swing.JLabel lblServiceId;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtMileage;
    private javax.swing.JTextField txtServiceId;
    // End of variables declaration//GEN-END:variables

    private boolean validateServiceRecords() {
        
        if(txtServiceId.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Service id is required & less than 10 digits");
            return false;      
        }
        
        if(txtServiceId.getText().length()>10){
            JOptionPane.showMessageDialog(this, "Service id should be less than 10 digits");
            return false;      
        }
        
        if(!txtServiceId.getText().isEmpty()){
        for (char c : txtServiceId.getText().toCharArray()) {
                if (!Character.isDigit(c)) {
                    JOptionPane.showMessageDialog(this, "Invalid service id, Only digits are allowed");
                     return false;
                }              
            }
        }
        
        if(txtServiceId.getText().length()>=10){
            JOptionPane.showMessageDialog(this, "Service id is too long");
            return false;
        }
                    
        if(txtDate.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Servicer Date is required");
            return false;    
        }
        
        if(txtServiceId.getText().length()>25){
            JOptionPane.showMessageDialog(this, "Service date should be less than 25 characters");
            return false;      
        }
        
        if(!txtMileage.getText().isEmpty() && txtMileage.getText().length()>=10 ){
            JOptionPane.showMessageDialog(this, "Invalid milage, Number of Digits should be less than 10");
            return false;
            }
        
        if(!txtMileage.getText().isEmpty()){
        for (char c : txtMileage.getText().toCharArray()) {
                if (!Character.isDigit(c)) {
                    JOptionPane.showMessageDialog(this, "Invalid milage, Only digits are allowed");
                     return false;
                }              
            }
        }
    return true;    
    }
}
