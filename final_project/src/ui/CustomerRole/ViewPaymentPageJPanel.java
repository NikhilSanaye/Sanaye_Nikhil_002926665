/*
 * CreateProductJPanel.java
 *
 * Created on September 18, 2008, 2:54 PM
 */

package ui.CustomerRole;

import model.Product;
import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.Order;
import model.OrderItems;
import model.ProductCatalog;

/**
 *
 * @author Rushabh
 */
public class ViewPaymentPageJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    public Order order;
    public ArrayList<OrderItems> orderItemList;
    private double totalAmount=0;
    /** Creates new form CreateProductJPanel */
    public ViewPaymentPageJPanel(JPanel upc, Order order, ArrayList<OrderItems> orderItemList,double totalAmount) {
        initComponents();
        userProcessContainer = upc;
        this.order=order;
        this.orderItemList=orderItemList;
        this.totalAmount=totalAmount;
        
        displayData();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    public void displayData(){
        
        
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        txtOrderStatus = new javax.swing.JTextField();
        txtOrderStatus1 = new javax.swing.JTextField();
        txtOrderStatus2 = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(650, 600));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Payment Details");

        jLabel2.setText("Card Number:");

        jLabel3.setText("Expiry Year:");

        jLabel5.setText("CVV:");

        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOrderStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOrderStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(171, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnPay)
                .addGap(279, 279, 279))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrderStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrderStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrderStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(btnPay)
                .addContainerGap(268, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
        if(validatePaymentMethod() && order!=null && orderItemList.size()!=0){
            placeOrderInDB();
            for(int i=0;i<orderItemList.size();i++){
                placeOrderItemsInDB(orderItemList.get(i));
            }
        }
        
        JOptionPane.showMessageDialog(this, "Payment Successfull!Your Order has been placed");

    }//GEN-LAST:event_btnPayActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtOrderStatus;
    private javax.swing.JTextField txtOrderStatus1;
    private javax.swing.JTextField txtOrderStatus2;
    // End of variables declaration//GEN-END:variables

    private boolean validatePaymentMethod() {
        return true;
    }

    private void placeOrderInDB() {
        try {
	Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/market_schema", "root", "admin");
        String query = "INSERT INTO orders(`orderId`, `Address`, `City`,`State`,`deliveryState`,`orderDate`,`mailId`,`country`)" 
                + " VALUES ('"+order.getOrderId()+"','"+order.getAddress()+"','"+order.getCity()+"','"+order.getState()+"','"+order.getDeliveryState()+"','"+order.getOrderDate()+"','"+order.getMailId()+"','"+order.getCountry()+"')";    
        
        Statement st = connection.createStatement();
        int rs = st.executeUpdate(query);
        if(rs>0){
            //JOptionPane.showMessageDialog(null, "Order inserted", "Info", JOptionPane.INFORMATION_MESSAGE);            
        }               
        connection.close();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
    
    private void placeOrderItemsInDB(OrderItems orderItem) {
        try {
	Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/market_schema", "root", "admin");
        String query = "INSERT INTO orderitems(`orderId`, `productId`, `quantity`,`productDescription`,`productName`,`unitPrice`)" 
                + " VALUES ('"+orderItem.getOrderId()+"','"+orderItem.getProductId()+"','"+orderItem.getQuantity()+"','"+orderItem.getDescription()+"','"+orderItem.getProductName()+"','"+orderItem.getUnitPrice()+"')";    
        
        Statement st = connection.createStatement();
        int rs = st.executeUpdate(query);
        if(rs>0){
            //JOptionPane.showMessageDialog(null, "Order items inserted", "Info", JOptionPane.INFORMATION_MESSAGE);            
        }               
        connection.close();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }
    
}
