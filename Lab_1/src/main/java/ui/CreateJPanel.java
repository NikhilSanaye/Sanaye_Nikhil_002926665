/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.io.File;
import java.util.Arrays;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Car;
import model.ServiceRecordsHistory;

/**
 *
 * @author Nikhil
 */
public class CreateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    Car car;
    public CreateJPanel(Car car) {
        initComponents();
        this.car= car;
        this.car.setServiceRecordsHistory(new ServiceRecordsHistory());
    }
    public CreateJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        lblTitle = new javax.swing.JLabel();
        lblBrand = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblModel = new javax.swing.JLabel();
        txtModel = new javax.swing.JTextField();
        lblColor = new javax.swing.JLabel();
        txtColor = new javax.swing.JTextField();
        lblYear = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        lblEngineNo = new javax.swing.JLabel();
        txtEngineNo = new javax.swing.JTextField();
        lblSeatsNumber = new javax.swing.JLabel();
        txtSeatsNumber = new javax.swing.JTextField();
        lblLicensePlates = new javax.swing.JLabel();
        txtLicensePlates = new javax.swing.JTextField();
        lblOwnerName = new javax.swing.JLabel();
        txtOwnerName = new javax.swing.JTextField();
        lblOwnerDriverLicense = new javax.swing.JLabel();
        txtOwnerDriverLicense = new javax.swing.JTextField();
        lblOwnerSocialSecurityNumber = new javax.swing.JLabel();
        txtOwnerSocialSecurityNumber = new javax.swing.JTextField();
        lblOwnerAddress = new javax.swing.JLabel();
        txtOwnerAddress = new javax.swing.JTextField();
        lblServiceRecords = new javax.swing.JLabel();
        lblWarrantyYear = new javax.swing.JLabel();
        txtWarrantyYear = new javax.swing.JTextField();
        lblOwnerTelephoneNumbers = new javax.swing.JLabel();
        txtOwnerTelephoneNumbers = new javax.swing.JTextField();
        lblOwnerEmailAddresses = new javax.swing.JLabel();
        txtOwnerEmailAddresses = new javax.swing.JTextField();
        lblCarPhoto = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();
        btnCreateRecord = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setName("create_panel"); // NOI18N

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create");

        lblBrand.setText("Brand*:");

        txtBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrandActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblModel.setText("Model*:");

        txtModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelActionPerformed(evt);
            }
        });

        lblColor.setText("Color:");

        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });

        lblYear.setText("Year:");

        txtYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtYearActionPerformed(evt);
            }
        });

        lblEngineNo.setText("EngineNo*:");

        txtEngineNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEngineNoActionPerformed(evt);
            }
        });

        lblSeatsNumber.setText("SeatsNumber:");

        txtSeatsNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSeatsNumberActionPerformed(evt);
            }
        });

        lblLicensePlates.setText("LicensePlates*:");

        txtLicensePlates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLicensePlatesActionPerformed(evt);
            }
        });

        lblOwnerName.setText("OwnerName*:");

        txtOwnerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOwnerNameActionPerformed(evt);
            }
        });

        lblOwnerDriverLicense.setText("OwnerDriverLicense*:");

        txtOwnerDriverLicense.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOwnerDriverLicenseActionPerformed(evt);
            }
        });

        lblOwnerSocialSecurityNumber.setText("OwnerSocialSecurityNumber:");

        txtOwnerSocialSecurityNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOwnerSocialSecurityNumberActionPerformed(evt);
            }
        });

        lblOwnerAddress.setText("OwnerAddress:");

        txtOwnerAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOwnerAddressActionPerformed(evt);
            }
        });

        lblServiceRecords.setText("ServiceRecords:");

        lblWarrantyYear.setText("WarrantyYear:");

        txtWarrantyYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarrantyYearActionPerformed(evt);
            }
        });

        lblOwnerTelephoneNumbers.setText("OwnerTelephoneNumbers*:");

        txtOwnerTelephoneNumbers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOwnerTelephoneNumbersActionPerformed(evt);
            }
        });

        lblOwnerEmailAddresses.setText("OwnerEmailAddresses*:");

        txtOwnerEmailAddresses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOwnerEmailAddressesActionPerformed(evt);
            }
        });

        lblCarPhoto.setText("CarPhoto*:");

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        btnCreateRecord.setText("Create Record");
        btnCreateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateRecordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblBrand)
                                    .addGap(179, 179, 179))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblEngineNo, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblYear, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblColor, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblModel, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(159, 159, 159)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSeatsNumber)
                                    .addComponent(lblLicensePlates)
                                    .addComponent(lblOwnerName)
                                    .addComponent(lblOwnerTelephoneNumbers)
                                    .addComponent(lblOwnerEmailAddresses)
                                    .addComponent(lblOwnerDriverLicense)
                                    .addComponent(lblOwnerSocialSecurityNumber)
                                    .addComponent(lblOwnerAddress)
                                    .addComponent(lblServiceRecords)
                                    .addComponent(lblWarrantyYear)
                                    .addComponent(lblCarPhoto))
                                .addGap(49, 49, 49)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtWarrantyYear, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOwnerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOwnerSocialSecurityNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(btnUpload))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(btnCreateRecord))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtOwnerDriverLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtOwnerEmailAddresses, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtOwnerTelephoneNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtOwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLicensePlates, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSeatsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEngineNo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(btnSave)))
                .addGap(419, 419, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrand)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModel)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColor)
                    .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEngineNo)
                    .addComponent(txtEngineNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeatsNumber)
                    .addComponent(txtSeatsNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLicensePlates)
                    .addComponent(txtLicensePlates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblOwnerName)
                    .addComponent(txtOwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOwnerTelephoneNumbers)
                    .addComponent(txtOwnerTelephoneNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOwnerEmailAddresses)
                    .addComponent(txtOwnerEmailAddresses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOwnerDriverLicense)
                    .addComponent(txtOwnerDriverLicense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOwnerSocialSecurityNumber)
                    .addComponent(txtOwnerSocialSecurityNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOwnerAddress)
                    .addComponent(txtOwnerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblServiceRecords)
                    .addComponent(btnCreateRecord))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWarrantyYear)
                    .addComponent(txtWarrantyYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCarPhoto)
                    .addComponent(btnUpload))
                .addGap(56, 56, 56)
                .addComponent(btnSave)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("create_panel");
    }// </editor-fold>//GEN-END:initComponents

    private void txtBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrandActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        if(validateMandatoryFields()){
        
        car.setBrand(txtBrand.getText());
        car.setModel(txtModel.getText());
        car.setColor(txtColor.getText());
        car.setYear(txtYear.getText());
        car.setEngineNo(txtEngineNo.getText());
        car.setSeatsNumber(txtSeatsNumber.getText());
        car.setLicensePlates(txtLicensePlates.getText());
        car.setOwnerName(txtOwnerName.getText());
        car.setOwnerTelephoneNumbers(txtOwnerTelephoneNumbers.getText());
        car.setOwnerEmailAddresses(txtOwnerEmailAddresses.getText());
        car.setOwnerDriverLicense(txtOwnerDriverLicense.getText());
        car.setOwnerSocialSecurityNumber(txtOwnerSocialSecurityNumber.getText());
        car.setOwnerAddress(txtOwnerAddress.getText());
        car.setWarrantyYear(txtWarrantyYear.getText());        
        
        JOptionPane.showMessageDialog(this, "Car Information Saved.");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorActionPerformed

    private void txtYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtYearActionPerformed

    private void txtEngineNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEngineNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEngineNoActionPerformed

    private void txtSeatsNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSeatsNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSeatsNumberActionPerformed

    private void txtLicensePlatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLicensePlatesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLicensePlatesActionPerformed

    private void txtOwnerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOwnerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOwnerNameActionPerformed

    private void txtOwnerDriverLicenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOwnerDriverLicenseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOwnerDriverLicenseActionPerformed

    private void txtOwnerSocialSecurityNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOwnerSocialSecurityNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOwnerSocialSecurityNumberActionPerformed

    private void txtOwnerAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOwnerAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOwnerAddressActionPerformed

    private void txtWarrantyYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarrantyYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarrantyYearActionPerformed

    private void txtOwnerTelephoneNumbersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOwnerTelephoneNumbersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOwnerTelephoneNumbersActionPerformed

    private void txtOwnerEmailAddressesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOwnerEmailAddressesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOwnerEmailAddressesActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        //Logic to save image
        JFileChooser file= new JFileChooser();
        file.setCurrentDirectory(new File("user.dir"));
        FileNameExtensionFilter filter= new FileNameExtensionFilter("All pic", "png", "jpg", "jpeg", "gif");
        file.addChoosableFileFilter(filter);        
        int a= file.showSaveDialog(null);
        if(a==JFileChooser.APPROVE_OPTION){
            car.setjPhoto(file.getSelectedFile().getAbsolutePath());        //saving absolute path of image
        }   
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnCreateRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateRecordActionPerformed
        CreateServiceRecordsPanel createServiceRecordsPanel= new CreateServiceRecordsPanel(car.getServiceRecordsHistory());
        createServiceRecordsPanel.setBounds(0, 0, 400, 450);
        createServiceRecordsPanel.setBackground(Color.WHITE);
        JOptionPane jop = new JOptionPane();
        JDialog dialog = jop.createDialog("My Dialog");         //Creating new dialog box to show service record panel
        dialog.setSize(400, 450);
        dialog.setContentPane(createServiceRecordsPanel);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnCreateRecordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateRecord;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpload;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblCarPhoto;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblEngineNo;
    private javax.swing.JLabel lblLicensePlates;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblOwnerAddress;
    private javax.swing.JLabel lblOwnerDriverLicense;
    private javax.swing.JLabel lblOwnerEmailAddresses;
    private javax.swing.JLabel lblOwnerName;
    private javax.swing.JLabel lblOwnerSocialSecurityNumber;
    private javax.swing.JLabel lblOwnerTelephoneNumbers;
    private javax.swing.JLabel lblSeatsNumber;
    private javax.swing.JLabel lblServiceRecords;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWarrantyYear;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtEngineNo;
    private javax.swing.JTextField txtLicensePlates;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtOwnerAddress;
    private javax.swing.JTextField txtOwnerDriverLicense;
    private javax.swing.JTextField txtOwnerEmailAddresses;
    private javax.swing.JTextField txtOwnerName;
    private javax.swing.JTextField txtOwnerSocialSecurityNumber;
    private javax.swing.JTextField txtOwnerTelephoneNumbers;
    private javax.swing.JTextField txtSeatsNumber;
    private javax.swing.JTextField txtWarrantyYear;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private boolean validateMandatoryFields() {
        //brand
        if(txtBrand.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Brand");
            return false;
        }
        if(!txtBrand.getText().isEmpty() && txtBrand.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Brand can have only 20 characters");
            return false;
        }
        if(!txtBrand.getText().isEmpty() && checkIfDigitsPresent(txtBrand.getText())){
            JOptionPane.showMessageDialog(this, "Brand cannot contain digits");
            return false;
        }
        if(!txtBrand.getText().isEmpty() && checkSpecialCharacters(txtBrand.getText())){
            JOptionPane.showMessageDialog(this, "Brand cannot contain special characters");
            return false;
        }
        
        //model
        if(txtModel.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Model");
            return false;
        }
        
        if(!txtModel.getText().isEmpty() && txtModel.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Model can can have upto 20 characters");
            return false;
        }
        
        if(!txtModel.getText().isEmpty() && checkIfDigitsPresent(txtModel.getText())){
            JOptionPane.showMessageDialog(this, "Model cannot contain digits");
            return false;
        }
        
        if(!txtModel.getText().isEmpty() && checkSpecialCharacters(txtModel.getText())){
            JOptionPane.showMessageDialog(this, "Model cannot contain special character");
            return false;
        }
        
        //color
        if(!txtColor.getText().isEmpty() && txtColor.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Color can can have upto 20 characters");
            return false;
        }
        if(!txtColor.getText().isEmpty() && checkIfDigitsPresent(txtColor.getText())){
            JOptionPane.showMessageDialog(this, "Color cannot contain special character");
            return false;
        }
        
        if(!txtColor.getText().isEmpty() && checkSpecialCharacters(txtColor.getText())){
            JOptionPane.showMessageDialog(this, "Color cannot contain special character");
            return false;
        }
        
        //Year
        if(!txtYear.getText().isEmpty() && txtYear.getText().length()!=4){
            JOptionPane.showMessageDialog(this, "Year should have 4 digits");
            return false;
        }
        if(!txtYear.getText().isEmpty() && checkIfCharsPresent(txtYear.getText())){
            JOptionPane.showMessageDialog(this, "Year cannot contain characters");
            return false;
        }
        if(!txtYear.getText().isEmpty() && checkSpecialCharacters(txtYear.getText())){
            JOptionPane.showMessageDialog(this, "Year cannot contain specialcharacters");
            return false;
        }
        
        //Engine Number
        if(txtEngineNo.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Engine Number");
            return false;
        }
        
        if(!txtEngineNo.getText().isEmpty() && txtEngineNo.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Engine Number can have upto 20 characters");
            return false;
        }
        
        if(!txtEngineNo.getText().isEmpty() && checkSpecialCharacters(txtEngineNo.getText())){
            JOptionPane.showMessageDialog(this, "Engine Number cannot contain specialcharacters");
            return false;
        }
        
        //Seats Number
        if(!txtSeatsNumber.getText().isEmpty() && txtSeatsNumber.getText().length()>2){
            JOptionPane.showMessageDialog(this, "Seats can have upto 2 digits");
            return false;
        }
        if(!txtSeatsNumber.getText().isEmpty() && checkIfCharsPresent(txtSeatsNumber.getText())){
            JOptionPane.showMessageDialog(this, "Seats cannot contain characters");
            return false;
        }
        if(!txtSeatsNumber.getText().isEmpty() && checkSpecialCharacters(txtSeatsNumber.getText())){
            JOptionPane.showMessageDialog(this, "Seats cannot contain specialcharacters");
            return false;
        }
        
        //License Plate
        if(txtLicensePlates.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter License Plate Number");
            return false;
        }
        
        if(!txtLicensePlates.getText().isEmpty() && txtLicensePlates.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "License Plate Number can have upto 20 characters");
            return false;
        }
        if(!txtLicensePlates.getText().isEmpty() && checkSpecialCharacters(txtLicensePlates.getText())){
            JOptionPane.showMessageDialog(this, "License Plate Number cannot contain specialcharacters");
            return false;
        }
        
        
        //Owner name
        if(txtOwnerName.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Owner Name");
            return false;
        }
        
        if(!txtOwnerName.getText().isEmpty() && txtOwnerName.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Owner Name can have upto 20 characters");
            return false;
        }
        
        if(!txtOwnerName.getText().isEmpty() && checkIfDigitsPresent(txtOwnerName.getText())){
            JOptionPane.showMessageDialog(this, "Owner Name cannot contain digits");
            return false;
        }
        if(!txtOwnerName.getText().isEmpty() && checkSpecialCharacters(txtOwnerName.getText())){
            JOptionPane.showMessageDialog(this, "Owner Name cannot contain specialcharacters");
            return false;
        }
        
        //telephone numbers
        if(txtOwnerTelephoneNumbers.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Owner Telephone Number");
            return false;
        }
        
        if(txtOwnerTelephoneNumbers.getText().length()!=10){
            JOptionPane.showMessageDialog(this, "Owner Telephone Numbbers should be 10 digits");
            return false;
        }
        
        if(checkIfCharsPresent(txtOwnerTelephoneNumbers.getText())){
            JOptionPane.showMessageDialog(this, "Owner Telephone Numbbers cannot contain characters");
            return false;
        }
        
        if(checkSpecialCharacters(txtOwnerTelephoneNumbers.getText())){
            JOptionPane.showMessageDialog(this, "Owner Telephone Numbbers cannot contain specialcharacters");
            return false;
        }
        
        
        
        //Email address
        if(txtOwnerEmailAddresses.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Owner Email Addresses");
            return false;
        }
        
        if(!validateEmail(txtOwnerEmailAddresses.getText())){
            JOptionPane.showMessageDialog(this, "Email Addresses invalid");
            return false;
        }
                
        //license
        if(txtOwnerDriverLicense.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter Owner Driver License");
            return false;
        }
        if(!txtOwnerDriverLicense.getText().isEmpty() && txtOwnerDriverLicense.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Owner Driver License can have upto 20 characters");
            return false;
        }
        if(!txtOwnerDriverLicense.getText().isEmpty() && checkSpecialCharacters(txtOwnerDriverLicense.getText())){
            JOptionPane.showMessageDialog(this, "Owner Driver License cannot contain special characters");
            return false;
        }
        
        //SSN
        if(!txtOwnerSocialSecurityNumber.getText().isEmpty() && txtOwnerSocialSecurityNumber.getText().length()>=20){
            JOptionPane.showMessageDialog(this, "Owner Social Security Number can have upto 20 characters");
            return false;
        }
        if(checkSpecialCharacters(txtOwnerSocialSecurityNumber.getText())){
            JOptionPane.showMessageDialog(this, "Owner Social Security Number cannot contain special characters");
            return false;
        }
        
        
        //Owner Address
        if(!txtOwnerAddress.getText().isEmpty() && txtOwnerAddress.getText().length()>=40){
            JOptionPane.showMessageDialog(this, "Owner Address can have upto 40 characters");
            return false;
        }
        
        //WarrantyYear
        if(!txtWarrantyYear.getText().isEmpty() && txtWarrantyYear.getText().length()!=4){
            JOptionPane.showMessageDialog(this, "Warranty Year should be 4 digits");
            return false;
        }
        if(!txtWarrantyYear.getText().isEmpty() && checkIfCharsPresent(txtWarrantyYear.getText())){
            JOptionPane.showMessageDialog(this, "Warranty Year cannot contain characters");
            return false;
        }
        if(!txtWarrantyYear.getText().isEmpty() && !checkIfCharsPresent(txtWarrantyYear.getText())){
            if(Integer.parseInt(txtWarrantyYear.getText()) < Integer.parseInt(txtYear.getText()) )
            JOptionPane.showMessageDialog(this, "Warranty Year cannot be less than manufacturing year");
            return false;
        }
        if(!txtWarrantyYear.getText().isEmpty() && checkSpecialCharacters(txtWarrantyYear.getText())){
            JOptionPane.showMessageDialog(this, "Warranty Year cannot contain special characters");
            return false;
        }
        
        //car photo
        if(null==car.getjPhoto()){
            JOptionPane.showMessageDialog(this, "Please enter Car photo");
            return false;
        }
        
        return true;
    }
    
    
    public boolean checkIfDigitsPresent(String s){
        for (char c : s.toCharArray()) {
                if (Character.isDigit(c)) {
                     return true;
                }              
            }
        return false;
    }
    
    
    public boolean checkIfCharsPresent(String s){
        for (char c : s.toCharArray()) {
                if (!Character.isDigit(c)) {
                     return true;
                }              
            }
        return false;
    }
    
    public boolean validateEmail(String email){
        
    if(email.length()>100){
        return false;
    }    
    String[] chunks = email.split("@");

    if (chunks.length != 2){
        return false;
    }

    String emailName = chunks[0];
    String emailDomain = chunks[1];
    
    if(emailName.length() <1 || emailDomain.length()<3){
        return false;
    }
    
    // Define valid chars
    char[] validChars = new char[]{'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','.','0','1','2','3','4','5','6','7','8','9','_','-'};

    // emailName must only include valid chars
    for(int i = 0; i < emailName.length(); i ++) {
        if(Arrays.toString(validChars).indexOf(emailName.charAt(i)) < 0 ) {
            return false;   
        }
    }
    
    // emailDomain must only include valid chars
    for(int j = 0; j < emailDomain.length(); j ++) {
        if(Arrays.toString(validChars).indexOf(emailDomain.charAt(j)) < 0) {
            return false;   
        }
    }
    
    // Domain must include but not start with .
    if(emailDomain.indexOf('.') <= 0) {
        return false;
    }
    
    // Domain's last . should be 2 chars or more from the end
    String[] emailDomainParts = email.split("\\.");
    if(emailDomainParts[emailDomainParts.length - 1].length() < 2) {
        return false;
    } 
    return true;
    }
    
    public boolean checkSpecialCharacters(String st){
        String specialCharactersString = "!@#$%&*()'+,-./:;<=>?[]^_`{|}";
        for(char c: st.toCharArray()){
            if(specialCharactersString.contains(Character.toString(c))){
                return true;
            }
        }
        return false;
    }
}
